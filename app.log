nohup: ignoring input
[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------< com.example:G_apprenant >-----------------------
[INFO] Building G_apprenant 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.5.5:run (default-cli) > test-compile @ G_apprenant >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ G_apprenant ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.14.0:compile (default-compile) @ G_apprenant ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 44 source files with javac [debug parameters release 17] to target/classes
[WARNING] /media/fandresena/Data/projet/backent_gestion_formation/src/main/java/com/example/G_apprenant/specification/ApprenantSpecification.java:[149,29] <T>where(org.springframework.data.jpa.domain.Specification<T>) in org.springframework.data.jpa.domain.Specification has been deprecated and marked for removal
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ G_apprenant ---
[INFO] skip non existing resourceDirectory /media/fandresena/Data/projet/backent_gestion_formation/src/test/resources
[INFO] 
[INFO] --- compiler:3.14.0:testCompile (default-testCompile) @ G_apprenant ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [debug parameters release 17] to target/test-classes
[INFO] 
[INFO] <<< spring-boot:3.5.5:run (default-cli) < test-compile @ G_apprenant <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.5.5:run (default-cli) @ G_apprenant ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.5)

2025-09-24 13:22:31 - Starting GApprenantApplication using Java 17.0.16 with PID 84519 (/media/fandresena/Data/projet/backent_gestion_formation/target/classes started by fandresena in /media/fandresena/Data/projet/backent_gestion_formation)
2025-09-24 13:22:31 - No active profile set, falling back to 1 default profile: "default"
2025-09-24 13:22:31 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-24 13:22:31 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-24 13:22:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-24 13:22:32 - Finished Spring Data repository scanning in 72 ms. Found 5 JPA repository interfaces.
2025-09-24 13:22:33 - Tomcat initialized with port 8080 (http)
2025-09-24 13:22:33 - Starting service [Tomcat]
2025-09-24 13:22:33 - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-24 13:22:33 - Initializing Spring embedded WebApplicationContext
2025-09-24 13:22:33 - Root WebApplicationContext: initialization completed in 2467 ms
2025-09-24 13:22:33 - Filter 'webMvcObservationFilter' configured for use
2025-09-24 13:22:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-24 13:22:34 - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-24 13:22:34 - HHH000026: Second-level cache disabled
2025-09-24 13:22:34 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-24 13:22:34 - HikariPool-1 - Starting...
2025-09-24 13:22:35 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76e559cf
2025-09-24 13:22:35 - HikariPool-1 - Start completed.
2025-09-24 13:22:35 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-24 13:22:35 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.10
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-24 13:22:35 - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@61180e71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@da4da46)
2025-09-24 13:22:35 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@161bd60b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f9c04b6)
2025-09-24 13:22:36 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-24 13:22:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-24 13:22:37 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-24 13:22:40 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-24 13:22:40 - 57 mappings in 'requestMappingHandlerMapping'
2025-09-24 13:22:40 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-09-24 13:22:40 - Exposing 3 endpoints beneath base path '/actuator'
2025-09-24 13:22:40 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-09-24 13:22:40 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-09-24 13:22:41 - LiveReload server is running on port 35729
2025-09-24 13:22:41 - Tomcat started on port 8080 (http) with context path '/api'
2025-09-24 13:22:41 - Started GApprenantApplication in 10.79 seconds (process running for 11.393)
2025-09-24 13:22:57 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-24 13:22:57 - Initializing Servlet 'dispatcherServlet'
2025-09-24 13:22:57 - Detected StandardServletMultipartResolver
2025-09-24 13:22:57 - Detected AcceptHeaderLocaleResolver
2025-09-24 13:22:57 - Detected FixedThemeResolver
2025-09-24 13:22:57 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@731e000c
2025-09-24 13:22:57 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6da7bf3c
2025-09-24 13:22:57 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-09-24 13:22:57 - Completed initialization in 3 ms
2025-09-24 13:23:01 - GET "/api/formations", parameters={}
2025-09-24 13:23:01 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:23:01 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:23:01 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:23:01 - Writing [[Formation{idFormation=3, nom='Marketing Digital', duree=60, frais=250000.00}, Formation{idFormation (truncated)...]
2025-09-24 13:23:02 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:23:02 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:23:02 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:02 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:23:02 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:02 - Completed 200 OK
2025-09-24 13:23:22 - POST "/api/auth/login", parameters={}
2025-09-24 13:23:22 - Mapped to com.example.G_apprenant.controller.AuthController#login(LoginRequest)
2025-09-24 13:23:22 - Read "application/json;charset=UTF-8" to [LoginRequest{email='admin.thunder@example.com'}]
2025-09-24 13:23:22 - Tentative de connexion pour l'email : admin.thunder@example.com
2025-09-24 13:23:22 - Tentative d'authentification pour l'email : admin.thunder@example.com
2025-09-24 13:23:22 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=?
2025-09-24 13:23:22 - Authentification réussie pour l'email : admin.thunder@example.com
2025-09-24 13:23:22 - Connexion réussie pour l'utilisateur : admin.thunder@example.com (ID: 9)
2025-09-24 13:23:22 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:23:22 - Writing [LoginResponse{idUtilisateur=null, email='null', prenom='Admin', nom='Thunder', role=ADMIN, statut=nu (truncated)...]
2025-09-24 13:23:22 - Completed 200 OK
2025-09-24 13:23:23 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:23:23 - GET "/api/stats/activities", parameters={}
2025-09-24 13:23:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:23:23 - Resource not found
2025-09-24 13:23:23 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:23:23 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:23:23 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:23:23 - Writing ["Erreur: No static resource stats/activities. - Cause: Aucune"]
2025-09-24 13:23:23 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.]
2025-09-24 13:23:23 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:23:23 - GET "/api/stats/dashboard", parameters={}
2025-09-24 13:23:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:23:23 - Resource not found
2025-09-24 13:23:23 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:23:23 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:23:23 - Writing ["Erreur: No static resource stats/dashboard. - Cause: Aucune"]
2025-09-24 13:23:23 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.]
2025-09-24 13:23:23 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:23:30 - GET "/api/apprenants", parameters={}
2025-09-24 13:23:30 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:23:30 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:23:30 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:23:30 - Writing [[Apprenant{idApprenant=1, nom='RAKOTO', prenom='Jean', email='jean.rakoto@email.com', cin='123456789 (truncated)...]
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:30 - Completed 200 OK
2025-09-24 13:23:33 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:23:33 - GET "/api/formations", parameters={}
2025-09-24 13:23:33 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:23:33 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:23:33 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:23:33 - Writing [[Formation{idFormation=3, nom='Marketing Digital', duree=60, frais=250000.00}, Formation{idFormation (truncated)...]
2025-09-24 13:23:33 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:23:33 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:23:33 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:33 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:23:33 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:33 - Completed 200 OK
2025-09-24 13:23:35 - GET "/api/apprenants", parameters={}
2025-09-24 13:23:35 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:23:35 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:23:35 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:23:35 - Writing [[Apprenant{idApprenant=1, nom='RAKOTO', prenom='Jean', email='jean.rakoto@email.com', cin='123456789 (truncated)...]
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:35 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:23:35 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:23:35 - Completed 200 OK
2025-09-24 13:24:18 - GET "/api/apprenants", parameters={}
2025-09-24 13:24:18 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:24:18 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:24:18 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:24:18 - Writing [[Apprenant{idApprenant=1, nom='RAKOTO', prenom='Jean', email='jean.rakoto@email.com', cin='123456789 (truncated)...]
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:24:18 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:24:18 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:18 - Completed 200 OK
2025-09-24 13:24:37 - GET "/api/apprenants/1", parameters={}
2025-09-24 13:24:37 - Mapped to com.example.G_apprenant.controller.ApprenantController#getById(Long)
2025-09-24 13:24:37 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:24:37 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:24:37 - Writing [Apprenant{idApprenant=1, nom='RAKOTO', prenom='Jean', email='jean.rakoto@email.com', cin='1234567890 (truncated)...]
2025-09-24 13:24:37 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:24:37 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:24:37 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:24:37 - Completed 200 OK
2025-09-24 13:25:15 - GET "/api/formations", parameters={}
2025-09-24 13:25:15 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:25:15 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:25:15 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:25:15 - Writing [[Formation{idFormation=3, nom='Marketing Digital', duree=60, frais=250000.00}, Formation{idFormation (truncated)...]
2025-09-24 13:25:15 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:15 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:15 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:25:15 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:15 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:25:15 - Completed 200 OK
2025-09-24 13:25:30 - GET "/api/formations/3", parameters={}
2025-09-24 13:25:30 - Mapped to com.example.G_apprenant.controller.FormationController#getById(Long)
2025-09-24 13:25:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:25:30 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:25:30 - Writing [Formation{idFormation=3, nom='Marketing Digital', duree=60, frais=250000.00}]
2025-09-24 13:25:30 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:30 - Completed 200 OK
2025-09-24 13:25:54 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:25:54 - GET "/api/formations", parameters={}
2025-09-24 13:25:54 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:25:54 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:25:54 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:25:54 - Writing [[Formation{idFormation=3, nom='Marketing Digital', duree=60, frais=250000.00}, Formation{idFormation (truncated)...]
2025-09-24 13:25:54 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:54 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:54 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:25:54 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:25:54 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:25:54 - Completed 200 OK
2025-09-24 13:26:05 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:26:05 - DELETE "/api/formations/3", parameters={}
2025-09-24 13:26:05 - Mapped to com.example.G_apprenant.controller.FormationController#delete(Long)
2025-09-24 13:26:05 - 
    select
        count(*) 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:26:05 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:26:05 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:26:05 - 
    delete 
    from
        formation 
    where
        id_formation=?
2025-09-24 13:26:05 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-09-24 13:26:05 - Nothing to write: null body
2025-09-24 13:26:05 - Completed 204 NO_CONTENT
2025-09-24 13:26:13 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:26:13 - GET "/api/formations/3", parameters={}
2025-09-24 13:26:13 - Mapped to com.example.G_apprenant.controller.FormationController#getById(Long)
2025-09-24 13:26:13 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:26:13 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleNotFound(ResourceNotFoundException)
2025-09-24 13:26:13 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:26:13 - Writing ["Formation non trouvée avec ID : 3"]
2025-09-24 13:26:13 - Resolved [com.example.G_apprenant.exception.ResourceNotFoundException: Formation non trouvée avec ID : 3]
2025-09-24 13:26:13 - Completed 404 NOT_FOUND
2025-09-24 13:26:30 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:26:30 - GET "/api/apprenants/1", parameters={}
2025-09-24 13:26:30 - Mapped to com.example.G_apprenant.controller.ApprenantController#getById(Long)
2025-09-24 13:26:30 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:26:30 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:26:30 - Writing [Apprenant{idApprenant=1, nom='RAKOTO', prenom='Jean', email='jean.rakoto@email.com', cin='1234567890 (truncated)...]
2025-09-24 13:26:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:26:30 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:26:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:26:30 - Completed 200 OK
2025-09-24 13:26:34 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:26:34 - DELETE "/api/apprenants/1", parameters={}
2025-09-24 13:26:34 - Mapped to com.example.G_apprenant.controller.ApprenantController#delete(Long)
2025-09-24 13:26:34 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:26:34 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:26:34 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:26:34 - 
    delete 
    from
        paiement 
    where
        id_paiement=?
2025-09-24 13:26:34 - 
    delete 
    from
        paiement 
    where
        id_paiement=?
2025-09-24 13:26:34 - 
    delete 
    from
        inscription 
    where
        id_inscription=?
2025-09-24 13:26:34 - 
    delete 
    from
        apprenant 
    where
        id_apprenant=?
2025-09-24 13:26:34 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-09-24 13:26:34 - Nothing to write: null body
2025-09-24 13:26:34 - Completed 204 NO_CONTENT
2025-09-24 13:26:38 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:26:38 - GET "/api/apprenants/1", parameters={}
2025-09-24 13:26:38 - Mapped to com.example.G_apprenant.controller.ApprenantController#getById(Long)
2025-09-24 13:26:38 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:26:38 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleNotFound(ResourceNotFoundException)
2025-09-24 13:26:38 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:26:38 - Writing ["Apprenant non trouvé id=1"]
2025-09-24 13:26:38 - Resolved [com.example.G_apprenant.exception.ResourceNotFoundException: Apprenant non trouvé id=1]
2025-09-24 13:26:38 - Completed 404 NOT_FOUND
2025-09-24 13:26:51 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:26:51 - GET "/api/apprenants/1", parameters={}
2025-09-24 13:26:51 - Mapped to com.example.G_apprenant.controller.ApprenantController#getById(Long)
2025-09-24 13:26:51 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:26:51 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleNotFound(ResourceNotFoundException)
2025-09-24 13:26:51 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:26:51 - Writing ["Apprenant non trouvé id=1"]
2025-09-24 13:26:51 - Resolved [com.example.G_apprenant.exception.ResourceNotFoundException: Apprenant non trouvé id=1]
2025-09-24 13:26:51 - Completed 404 NOT_FOUND
2025-09-24 13:30:22 - GET "/api/apprenants", parameters={}
2025-09-24 13:30:22 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:30:22 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:30:22 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:30:22 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:30:22 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:22 - Completed 200 OK
2025-09-24 13:30:30 - GET "/api/apprenants/2", parameters={}
2025-09-24 13:30:30 - Mapped to com.example.G_apprenant.controller.ApprenantController#getById(Long)
2025-09-24 13:30:30 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:30:30 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:30:30 - Writing [Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='234567890123 (truncated)...]
2025-09-24 13:30:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:30 - Completed 200 OK
2025-09-24 13:30:47 - POST "/api/auth/register", parameters={}
2025-09-24 13:30:47 - Mapped to com.example.G_apprenant.controller.AuthController#register(UtilisateurRequest)
2025-09-24 13:30:47 - Read "application/json;charset=UTF-8" to [UtilisateurRequest{email='apitest.1758709847@example.com', prenom='Api', nom='Tester', role=USER}]
2025-09-24 13:30:47 - Tentative d'inscription pour l'email : apitest.1758709847@example.com
2025-09-24 13:30:47 - 
    select
        u1_0.id_utilisateur 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-09-24 13:30:47 - Création d'un nouvel utilisateur : apitest.1758709847@example.com
2025-09-24 13:30:47 - 
    select
        u1_0.id_utilisateur 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-09-24 13:30:47 - 
    insert 
    into
        utilisateurs
        (compte_verrouille, date_creation, date_modification, derniere_connexion, email, email_verifie, mot_de_passe_hash, nom, preferences_langue, prenom, role, statut, telephone, tentatives_connexion_echec, theme_preference, token_expiration, token_reinitialisation) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-24 13:30:47 - Utilisateur créé avec succès avec l'ID : 12
2025-09-24 13:30:47 - Inscription réussie pour l'utilisateur : apitest.1758709847@example.com (ID: 12)
2025-09-24 13:30:47 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:30:47 - Writing [{success=true, message=Inscription réussie, userId=12, email=apitest.1758709847@example.com}]
2025-09-24 13:30:47 - Completed 201 CREATED
2025-09-24 13:30:47 - POST "/api/auth/login", parameters={}
2025-09-24 13:30:47 - Mapped to com.example.G_apprenant.controller.AuthController#login(LoginRequest)
2025-09-24 13:30:47 - Read "application/json;charset=UTF-8" to [LoginRequest{email='apitest.1758709847@example.com'}]
2025-09-24 13:30:47 - Tentative de connexion pour l'email : apitest.1758709847@example.com
2025-09-24 13:30:47 - Tentative d'authentification pour l'email : apitest.1758709847@example.com
2025-09-24 13:30:47 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=?
2025-09-24 13:30:47 - Authentification réussie pour l'email : apitest.1758709847@example.com
2025-09-24 13:30:47 - Connexion réussie pour l'utilisateur : apitest.1758709847@example.com (ID: 12)
2025-09-24 13:30:47 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:30:47 - Writing [LoginResponse{idUtilisateur=null, email='null', prenom='Api', nom='Tester', role=USER, statut=null}]
2025-09-24 13:30:47 - Completed 200 OK
2025-09-24 13:30:47 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:30:47 - POST "/api/apprenants", parameters={}
2025-09-24 13:30:47 - Mapped to com.example.G_apprenant.controller.ApprenantController#create(ApprenantRequest)
2025-09-24 13:30:47 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.ApprenantRequest@2e77bf54]
2025-09-24 13:30:47 - 
    insert 
    into
        apprenant
        (adresse, cin, date_naissance, email, nom, prenom, telephone) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-09-24 13:30:47 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:30:47 - Writing [Apprenant{idApprenant=13, nom='DOE', prenom='John', email='john.1758709847@example.com', cin='CIN175 (truncated)...]
2025-09-24 13:30:47 - Completed 201 CREATED
2025-09-24 13:30:47 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:30:47 - PUT "/api/apprenants/13", parameters={}
2025-09-24 13:30:47 - Mapped to com.example.G_apprenant.controller.ApprenantController#update(Long, ApprenantRequest)
2025-09-24 13:30:47 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.ApprenantRequest@6d8b15a6]
2025-09-24 13:30:47 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:30:47 - 
    update
        apprenant 
    set
        adresse=?,
        cin=?,
        date_naissance=?,
        email=?,
        nom=?,
        prenom=?,
        telephone=? 
    where
        id_apprenant=?
2025-09-24 13:30:47 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:30:47 - Writing [Apprenant{idApprenant=13, nom='DOE', prenom='John', email='john-upd.1758709847@example.com', cin='CI (truncated)...]
2025-09-24 13:30:47 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:47 - Completed 200 OK
2025-09-24 13:30:47 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:30:47 - DELETE "/api/apprenants/13", parameters={}
2025-09-24 13:30:47 - Mapped to com.example.G_apprenant.controller.ApprenantController#delete(Long)
2025-09-24 13:30:47 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:30:47 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:30:47 - 
    delete 
    from
        apprenant 
    where
        id_apprenant=?
2025-09-24 13:30:47 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-09-24 13:30:47 - Nothing to write: null body
2025-09-24 13:30:47 - Completed 204 NO_CONTENT
2025-09-24 13:32:33 - GET "/api/apprenants", parameters={}
2025-09-24 13:32:33 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:32:33 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:32:33 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:32:33 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:32:33 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:33 - Completed 200 OK
2025-09-24 13:32:44 - GET "/api/apprenants", parameters={}
2025-09-24 13:32:44 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:32:44 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:32:44 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:32:44 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:32:44 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:32:44 - Completed 200 OK
2025-09-24 13:33:00 - POST "/api/auth/login", parameters={}
2025-09-24 13:33:00 - Mapped to com.example.G_apprenant.controller.AuthController#login(LoginRequest)
2025-09-24 13:33:00 - Read "application/json;charset=UTF-8" to [LoginRequest{email='admin.thunder@example.com'}]
2025-09-24 13:33:00 - Tentative de connexion pour l'email : admin.thunder@example.com
2025-09-24 13:33:00 - Tentative d'authentification pour l'email : admin.thunder@example.com
2025-09-24 13:33:00 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=?
2025-09-24 13:33:00 - Authentification réussie pour l'email : admin.thunder@example.com
2025-09-24 13:33:00 - Connexion réussie pour l'utilisateur : admin.thunder@example.com (ID: 9)
2025-09-24 13:33:00 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:33:00 - Writing [LoginResponse{idUtilisateur=null, email='null', prenom='Admin', nom='Thunder', role=ADMIN, statut=nu (truncated)...]
2025-09-24 13:33:00 - Completed 200 OK
2025-09-24 13:33:00 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:33:00 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:33:00 - GET "/api/stats/dashboard", parameters={}
2025-09-24 13:33:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:33:00 - Resource not found
2025-09-24 13:33:00 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:33:00 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:33:00 - Writing ["Erreur: No static resource stats/dashboard. - Cause: Aucune"]
2025-09-24 13:33:00 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.]
2025-09-24 13:33:00 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:33:00 - GET "/api/stats/activities", parameters={}
2025-09-24 13:33:00 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:33:00 - Resource not found
2025-09-24 13:33:00 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:33:00 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:33:00 - Writing ["Erreur: No static resource stats/activities. - Cause: Aucune"]
2025-09-24 13:33:00 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.]
2025-09-24 13:33:00 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:33:02 - GET "/api/apprenants", parameters={}
2025-09-24 13:33:02 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:33:02 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:33:02 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:33:02 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:33:02 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:33:02 - Completed 200 OK
2025-09-24 13:34:11 - GET "/api/apprenants", parameters={}
2025-09-24 13:34:11 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:34:11 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:34:11 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:11 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:11 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:11 - Completed 200 OK
2025-09-24 13:34:25 - GET "/api/apprenants", parameters={}
2025-09-24 13:34:25 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:34:25 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:34:25 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:25 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:25 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:25 - Completed 200 OK
2025-09-24 13:34:36 - POST "/api/auth/login", parameters={}
2025-09-24 13:34:36 - Mapped to com.example.G_apprenant.controller.AuthController#login(LoginRequest)
2025-09-24 13:34:36 - Read "application/json;charset=UTF-8" to [LoginRequest{email='admin.thunder@example.com'}]
2025-09-24 13:34:36 - Tentative de connexion pour l'email : admin.thunder@example.com
2025-09-24 13:34:36 - Tentative d'authentification pour l'email : admin.thunder@example.com
2025-09-24 13:34:36 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=?
2025-09-24 13:34:36 - Authentification réussie pour l'email : admin.thunder@example.com
2025-09-24 13:34:36 - Connexion réussie pour l'utilisateur : admin.thunder@example.com (ID: 9)
2025-09-24 13:34:36 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:36 - Writing [LoginResponse{idUtilisateur=null, email='null', prenom='Admin', nom='Thunder', role=ADMIN, statut=nu (truncated)...]
2025-09-24 13:34:36 - Completed 200 OK
2025-09-24 13:34:36 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:34:36 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:34:36 - GET "/api/stats/activities", parameters={}
2025-09-24 13:34:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:34:36 - Resource not found
2025-09-24 13:34:36 - GET "/api/stats/dashboard", parameters={}
2025-09-24 13:34:36 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
2025-09-24 13:34:36 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
2025-09-24 13:34:36 - Resource not found
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:34:36 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:34:36 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:34:36 - Writing ["Erreur: No static resource stats/activities. - Cause: Aucune"]
2025-09-24 13:34:36 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.]
2025-09-24 13:34:36 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:34:36 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:34:36 - Writing ["Erreur: No static resource stats/dashboard. - Cause: Aucune"]
2025-09-24 13:34:36 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.]
2025-09-24 13:34:36 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:34:39 - GET "/api/apprenants", parameters={}
2025-09-24 13:34:39 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:34:39 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:34:39 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:39 - Writing [[Apprenant{idApprenant=2, nom='RABE', prenom='Marie', email='marie.rabe@email.com', cin='23456789012 (truncated)...]
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:39 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:39 - Completed 200 OK
2025-09-24 13:34:42 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:34:42 - DELETE "/api/apprenants/2", parameters={}
2025-09-24 13:34:42 - Mapped to com.example.G_apprenant.controller.ApprenantController#delete(Long)
2025-09-24 13:34:42 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:34:42 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:42 - 
    delete 
    from
        apprenant 
    where
        id_apprenant=?
2025-09-24 13:34:42 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-09-24 13:34:42 - Nothing to write: null body
2025-09-24 13:34:42 - Completed 204 NO_CONTENT
2025-09-24 13:34:42 - GET "/api/apprenants", parameters={}
2025-09-24 13:34:42 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:34:42 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:34:42 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:42 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:34:42 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:42 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:42 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:42 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:42 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:42 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:42 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:43 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:43 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:43 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:43 - Completed 200 OK
2025-09-24 13:34:46 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:34:46 - DELETE "/api/apprenants/4", parameters={}
2025-09-24 13:34:46 - Mapped to com.example.G_apprenant.controller.ApprenantController#delete(Long)
2025-09-24 13:34:46 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    delete 
    from
        apprenant 
    where
        id_apprenant=?
2025-09-24 13:34:46 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-09-24 13:34:46 - Nothing to write: null body
2025-09-24 13:34:46 - Completed 204 NO_CONTENT
2025-09-24 13:34:46 - GET "/api/apprenants", parameters={}
2025-09-24 13:34:46 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:34:46 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:34:46 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:46 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:46 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:46 - Completed 200 OK
2025-09-24 13:34:54 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:34:54 - PUT "/api/apprenants/5", parameters={}
2025-09-24 13:34:54 - Mapped to com.example.G_apprenant.controller.ApprenantController#update(Long, ApprenantRequest)
2025-09-24 13:34:54 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.ApprenantRequest@1c24ff22]
2025-09-24 13:34:54 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    update
        apprenant 
    set
        adresse=?,
        cin=?,
        date_naissance=?,
        email=?,
        nom=?,
        prenom=?,
        telephone=? 
    where
        id_apprenant=?
2025-09-24 13:34:54 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:54 - Writing [Apprenant{idApprenant=5, nom='RINA', prenom='DavidVISECO', email='david.rina@email.com', cin='567890 (truncated)...]
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:54 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:54 - Completed 200 OK
2025-09-24 13:34:54 - GET "/api/apprenants", parameters={}
2025-09-24 13:34:54 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:34:54 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:34:54 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:34:54 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:34:54 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:34:54 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:34:54 - Completed 200 OK
2025-09-24 13:35:21 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:21 - POST "/api/apprenants", parameters={}
2025-09-24 13:35:21 - Mapped to com.example.G_apprenant.controller.ApprenantController#create(ApprenantRequest)
2025-09-24 13:35:21 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.ApprenantRequest@7c7b9c74]
2025-09-24 13:35:21 - 
    insert 
    into
        apprenant
        (adresse, cin, date_naissance, email, nom, prenom, telephone) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-09-24 13:35:21 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:21 - Writing [Apprenant{idApprenant=14, nom='iiiiiiii', prenom='iiiiiiii', email='admin.thunder@example.com', cin= (truncated)...]
2025-09-24 13:35:21 - Completed 201 CREATED
2025-09-24 13:35:21 - GET "/api/apprenants", parameters={}
2025-09-24 13:35:21 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:35:21 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:35:21 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:21 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:21 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:35:21 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:21 - Completed 200 OK
2025-09-24 13:35:27 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:27 - GET "/api/formations", parameters={}
2025-09-24 13:35:27 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:35:27 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:35:27 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:27 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:35:27 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:27 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:27 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:27 - Completed 200 OK
2025-09-24 13:35:30 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:30 - GET "/api/inscriptions", parameters={}
2025-09-24 13:35:30 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:35:30 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:35:30 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:35:30 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:35:30 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:35:30 - Completed 200 OK
2025-09-24 13:35:30 - GET "/api/apprenants", parameters={}
2025-09-24 13:35:30 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:35:30 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:35:30 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:35:30 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:30 - Completed 200 OK
2025-09-24 13:35:30 - GET "/api/formations", parameters={}
2025-09-24 13:35:30 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:35:30 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:35:30 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:35:30 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:35:30 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:30 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:30 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:30 - Completed 200 OK
2025-09-24 13:35:31 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:31 - GET "/api/formations", parameters={}
2025-09-24 13:35:31 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:35:31 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:35:31 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:31 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:35:31 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:31 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:31 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:31 - Completed 200 OK
2025-09-24 13:35:39 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:39 - GET "/api/inscriptions", parameters={}
2025-09-24 13:35:39 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:35:39 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:35:39 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:35:39 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:35:39 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:39 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:35:39 - Completed 200 OK
2025-09-24 13:35:39 - GET "/api/apprenants", parameters={}
2025-09-24 13:35:39 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:35:39 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:35:39 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:35:39 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:39 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:35:39 - Completed 200 OK
2025-09-24 13:35:39 - GET "/api/formations", parameters={}
2025-09-24 13:35:39 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:35:39 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:35:39 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:35:39 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:35:39 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:39 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:39 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:39 - Completed 200 OK
2025-09-24 13:35:40 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:40 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:40 - GET "/api/paiements", parameters={}
2025-09-24 13:35:40 - Mapped to com.example.G_apprenant.controller.PaiementController#getAll()
2025-09-24 13:35:40 - GET "/api/inscriptions", parameters={}
2025-09-24 13:35:40 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:35:40 - 
    select
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.id_inscription,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0
2025-09-24 13:35:40 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:35:40 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:35:40 - Writing [[Paiement{idPaiement=8, datePaiement=2024-02-03, montant=100000.00, modePaiement='Virement', module= (truncated)...]
2025-09-24 13:35:40 - Completed 200 OK
2025-09-24 13:35:40 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:35:40 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:35:40 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:40 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:35:40 - Completed 200 OK
2025-09-24 13:35:44 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:44 - GET "/api/formations", parameters={}
2025-09-24 13:35:44 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:35:44 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:35:44 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:44 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:35:44 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:44 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:44 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:44 - Completed 200 OK
2025-09-24 13:35:58 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:58 - POST "/api/formations", parameters={}
2025-09-24 13:35:58 - Mapped to com.example.G_apprenant.controller.FormationController#create(FormationRequest)
2025-09-24 13:35:58 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.FormationRequest@46df8deb]
2025-09-24 13:35:58 - 
    insert 
    into
        formation
        (description, duree, frais, nom) 
    values
        (?, ?, ?, ?)
2025-09-24 13:35:58 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:58 - Writing [Formation{idFormation=7, nom='FC', duree=50, frais=200000}]
2025-09-24 13:35:58 - Completed 201 CREATED
2025-09-24 13:35:58 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:35:58 - GET "/api/formations", parameters={}
2025-09-24 13:35:58 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:35:58 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:35:58 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:35:58 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:35:58 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:58 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:35:58 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:58 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:35:58 - Completed 200 OK
2025-09-24 13:36:04 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:36:04 - DELETE "/api/formations/7", parameters={}
2025-09-24 13:36:04 - Mapped to com.example.G_apprenant.controller.FormationController#delete(Long)
2025-09-24 13:36:04 - 
    select
        count(*) 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:36:04 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:36:04 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:04 - 
    delete 
    from
        formation 
    where
        id_formation=?
2025-09-24 13:36:04 - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-09-24 13:36:04 - Nothing to write: null body
2025-09-24 13:36:04 - Completed 204 NO_CONTENT
2025-09-24 13:36:04 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:36:04 - GET "/api/formations", parameters={}
2025-09-24 13:36:04 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:36:04 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:36:04 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:36:04 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:36:04 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:04 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:36:04 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:04 - Completed 200 OK
2025-09-24 13:36:11 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:36:11 - PUT "/api/formations/5", parameters={}
2025-09-24 13:36:11 - Mapped to com.example.G_apprenant.controller.FormationController#update(Long, FormationRequest)
2025-09-24 13:36:11 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.FormationRequest@1ac97508]
2025-09-24 13:36:11 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:36:11 - 
    update
        formation 
    set
        description=?,
        duree=?,
        frais=?,
        nom=? 
    where
        id_formation=?
2025-09-24 13:36:11 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:36:11 - Writing [Formation{idFormation=5, nom='Anglais ', duree=40, frais=150000}]
2025-09-24 13:36:11 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:11 - Completed 200 OK
2025-09-24 13:36:11 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:36:11 - GET "/api/formations", parameters={}
2025-09-24 13:36:11 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:36:11 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:36:11 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:36:11 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:36:11 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:11 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:36:11 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:11 - Completed 200 OK
2025-09-24 13:36:14 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:36:14 - GET "/api/inscriptions", parameters={}
2025-09-24 13:36:14 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:36:14 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:36:14 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:36:14 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:36:14 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:36:14 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:36:14 - Completed 200 OK
2025-09-24 13:36:14 - GET "/api/apprenants", parameters={}
2025-09-24 13:36:14 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:36:14 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:36:14 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:36:14 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:36:14 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:36:14 - Completed 200 OK
2025-09-24 13:36:14 - GET "/api/formations", parameters={}
2025-09-24 13:36:14 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:36:14 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:36:14 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:36:14 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:36:14 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:14 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:36:14 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:36:14 - Completed 200 OK
2025-09-24 13:37:58 - POST "/api/auth/login", parameters={}
2025-09-24 13:37:58 - Mapped to com.example.G_apprenant.controller.AuthController#login(LoginRequest)
2025-09-24 13:37:58 - Read "application/json;charset=UTF-8" to [LoginRequest{email='admin.thunder@example.com'}]
2025-09-24 13:37:58 - Tentative de connexion pour l'email : admin.thunder@example.com
2025-09-24 13:37:58 - Tentative d'authentification pour l'email : admin.thunder@example.com
2025-09-24 13:37:58 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=?
2025-09-24 13:37:58 - Authentification réussie pour l'email : admin.thunder@example.com
2025-09-24 13:37:58 - Connexion réussie pour l'utilisateur : admin.thunder@example.com (ID: 9)
2025-09-24 13:37:58 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:37:58 - Writing [LoginResponse{idUtilisateur=null, email='null', prenom='Admin', nom='Thunder', role=ADMIN, statut=nu (truncated)...]
2025-09-24 13:37:58 - Completed 200 OK
2025-09-24 13:37:58 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:37:58 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:37:58 - GET "/api/stats/dashboard", parameters={}
2025-09-24 13:37:58 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:37:58 - Resource not found
2025-09-24 13:37:58 - GET "/api/stats/activities", parameters={}
2025-09-24 13:37:58 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:37:58 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-09-24 13:37:58 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:37:58 - Writing ["Erreur: No static resource stats/dashboard. - Cause: Aucune"]
2025-09-24 13:37:58 - Resource not found
2025-09-24 13:37:58 - Using @ExceptionHandler com.example.G_apprenant.exception.GlobalExceptionHandler#handleOther(Exception)
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
2025-09-24 13:37:58 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/dashboard.]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
2025-09-24 13:37:58 - Completed 500 INTERNAL_SERVER_ERROR
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.G_apprenant.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-24 13:37:58 - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-09-24 13:37:58 - Writing ["Erreur: No static resource stats/activities. - Cause: Aucune"]
2025-09-24 13:37:58 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource stats/activities.]
2025-09-24 13:37:58 - Completed 500 INTERNAL_SERVER_ERROR
2025-09-24 13:38:00 - GET "/api/apprenants", parameters={}
2025-09-24 13:38:00 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:38:00 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:38:00 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:38:00 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:00 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:00 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:00 - Completed 200 OK
2025-09-24 13:38:04 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:04 - DELETE "/api/apprenants/8", parameters={}
2025-09-24 13:38:04 - Mapped to com.example.G_apprenant.controller.ApprenantController#delete(Long)
2025-09-24 13:38:04 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    delete 
    from
        apprenant 
    where
        id_apprenant=?
2025-09-24 13:38:04 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-09-24 13:38:04 - Nothing to write: null body
2025-09-24 13:38:04 - Completed 204 NO_CONTENT
2025-09-24 13:38:04 - GET "/api/apprenants", parameters={}
2025-09-24 13:38:04 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:38:04 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:38:04 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:38:04 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:04 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:04 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:04 - Completed 200 OK
2025-09-24 13:38:06 - GET "/api/apprenants", parameters={}
2025-09-24 13:38:06 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:38:06 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:38:07 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:38:07 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:07 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:07 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:07 - Completed 200 OK
2025-09-24 13:38:11 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:11 - GET "/api/formations", parameters={}
2025-09-24 13:38:11 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:38:11 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:38:11 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:38:11 - Writing [[Formation{idFormation=4, nom='Comptabilité et Gestion', duree=100, frais=300000.00}, Formation{idFo (truncated)...]
2025-09-24 13:38:11 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:11 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:11 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:11 - Completed 200 OK
2025-09-24 13:38:18 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:18 - PUT "/api/formations/4", parameters={}
2025-09-24 13:38:18 - Mapped to com.example.G_apprenant.controller.FormationController#update(Long, FormationRequest)
2025-09-24 13:38:18 - Read "application/json;charset=UTF-8" to [com.example.G_apprenant.dto.FormationRequest@494047f9]
2025-09-24 13:38:18 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:18 - 
    update
        formation 
    set
        description=?,
        duree=?,
        frais=?,
        nom=? 
    where
        id_formation=?
2025-09-24 13:38:18 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:38:18 - Writing [Formation{idFormation=4, nom='CG', duree=100, frais=300000}]
2025-09-24 13:38:18 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:18 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:18 - Completed 200 OK
2025-09-24 13:38:18 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:18 - GET "/api/formations", parameters={}
2025-09-24 13:38:18 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:38:18 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:38:18 - Using 'application/json', given [application/json] and supported [application/json]
2025-09-24 13:38:18 - Writing [[Formation{idFormation=5, nom='Anglais ', duree=40, frais=150000.00}, Formation{idFormation=4, nom=' (truncated)...]
2025-09-24 13:38:18 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:18 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:18 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:18 - Completed 200 OK
2025-09-24 13:38:23 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:23 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:23 - GET "/api/paiements", parameters={}
2025-09-24 13:38:23 - Mapped to com.example.G_apprenant.controller.PaiementController#getAll()
2025-09-24 13:38:23 - 
    select
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.id_inscription,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0
2025-09-24 13:38:23 - GET "/api/inscriptions", parameters={}
2025-09-24 13:38:23 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:38:23 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:23 - Writing [[Paiement{idPaiement=8, datePaiement=2024-02-03, montant=100000.00, modePaiement='Virement', module= (truncated)...]
2025-09-24 13:38:23 - Completed 200 OK
2025-09-24 13:38:23 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:38:23 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:23 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:38:23 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:23 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:23 - Completed 200 OK
2025-09-24 13:38:24 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:24 - GET "/api/inscriptions", parameters={}
2025-09-24 13:38:24 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:38:24 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:38:24 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:24 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:38:24 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:24 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:24 - Completed 200 OK
2025-09-24 13:38:24 - GET "/api/apprenants", parameters={}
2025-09-24 13:38:24 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:38:24 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:38:24 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:38:24 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:24 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:24 - Completed 200 OK
2025-09-24 13:38:24 - GET "/api/formations", parameters={}
2025-09-24 13:38:24 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:38:24 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:38:24 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:38:24 - Writing [[Formation{idFormation=5, nom='Anglais ', duree=40, frais=150000.00}, Formation{idFormation=4, nom=' (truncated)...]
2025-09-24 13:38:24 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:24 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:24 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:24 - Completed 200 OK
2025-09-24 13:38:41 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:41 - POST "/api/inscriptions", parameters={}
2025-09-24 13:38:41 - Mapped to com.example.G_apprenant.controller.InscriptionController#create(InscriptionRequest)
2025-09-24 13:38:41 - Read "application/json;charset=UTF-8" to [InscriptionRequest{apprenantId=6, formationId=4, droitInscription=120000}]
2025-09-24 13:38:41 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0 
    where
        a1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:41 - 
    insert 
    into
        inscription
        (id_apprenant, date_inscription, droit_inscription, id_formation, statut) 
    values
        (?, ?, ?, ?, ?)
2025-09-24 13:38:41 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:41 - Writing [Inscription{idInscription=8, dateInscription=2025-09-24, statut='En attente', droitInscription=12000 (truncated)...]
2025-09-24 13:38:41 - Completed 200 OK
2025-09-24 13:38:41 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:41 - GET "/api/inscriptions", parameters={}
2025-09-24 13:38:41 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:38:41 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:38:41 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:41 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:38:41 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:41 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:41 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:41 - Completed 200 OK
2025-09-24 13:38:41 - GET "/api/apprenants", parameters={}
2025-09-24 13:38:41 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:38:41 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:38:41 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:38:41 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:41 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:41 - Completed 200 OK
2025-09-24 13:38:41 - GET "/api/formations", parameters={}
2025-09-24 13:38:41 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:38:41 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:38:41 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:38:41 - Writing [[Formation{idFormation=5, nom='Anglais ', duree=40, frais=150000.00}, Formation{idFormation=4, nom=' (truncated)...]
2025-09-24 13:38:41 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:41 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:41 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:41 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:41 - Completed 200 OK
2025-09-24 13:38:46 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:46 - DELETE "/api/inscriptions/8", parameters={}
2025-09-24 13:38:46 - Mapped to com.example.G_apprenant.controller.InscriptionController#delete(Long)
2025-09-24 13:38:46 - 
    select
        count(*) 
    from
        inscription i1_0 
    where
        i1_0.id_inscription=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_inscription=?
2025-09-24 13:38:46 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:46 - 
    delete 
    from
        inscription 
    where
        id_inscription=?
2025-09-24 13:38:46 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:46 - Nothing to write: null body
2025-09-24 13:38:46 - Completed 204 NO_CONTENT
2025-09-24 13:38:46 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:46 - GET "/api/inscriptions", parameters={}
2025-09-24 13:38:46 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:38:46 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:38:46 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:46 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:38:46 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:46 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:46 - Completed 200 OK
2025-09-24 13:38:46 - GET "/api/apprenants", parameters={}
2025-09-24 13:38:46 - Mapped to com.example.G_apprenant.controller.ApprenantController#getAll()
2025-09-24 13:38:46 - 
    select
        a1_0.id_apprenant,
        a1_0.adresse,
        a1_0.cin,
        a1_0.date_naissance,
        a1_0.email,
        a1_0.nom,
        a1_0.prenom,
        a1_0.telephone 
    from
        apprenant a1_0
2025-09-24 13:38:46 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:38:46 - Writing [[Apprenant{idApprenant=3, nom='ANDRY', prenom='Paul', email='paul.andry@email.com', cin='34567890123 (truncated)...]
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:46 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_apprenant,
        i1_0.id_inscription,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_apprenant=?
2025-09-24 13:38:46 - Completed 200 OK
2025-09-24 13:38:46 - GET "/api/formations", parameters={}
2025-09-24 13:38:46 - Mapped to com.example.G_apprenant.controller.FormationController#getAll()
2025-09-24 13:38:46 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0
2025-09-24 13:38:46 - Using 'application/json', given [*/*] and supported [application/json]
2025-09-24 13:38:46 - Writing [[Formation{idFormation=5, nom='Anglais ', duree=40, frais=150000.00}, Formation{idFormation=4, nom=' (truncated)...]
2025-09-24 13:38:46 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:46 - 
    select
        i1_0.id_formation,
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_formation=?
2025-09-24 13:38:46 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:46 - Completed 200 OK
2025-09-24 13:38:51 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:51 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:38:51 - GET "/api/paiements", parameters={}
2025-09-24 13:38:51 - Mapped to com.example.G_apprenant.controller.PaiementController#getAll()
2025-09-24 13:38:51 - GET "/api/inscriptions", parameters={}
2025-09-24 13:38:51 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:38:51 - 
    select
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.id_inscription,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0
2025-09-24 13:38:51 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:51 - Writing [[Paiement{idPaiement=8, datePaiement=2024-02-03, montant=100000.00, modePaiement='Virement', module= (truncated)...]
2025-09-24 13:38:51 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:38:51 - Completed 200 OK
2025-09-24 13:38:51 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:38:51 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:38:51 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:38:51 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:38:51 - Completed 200 OK
2025-09-24 13:39:07 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:39:07 - POST "/api/paiements", parameters={}
2025-09-24 13:39:07 - Mapped to com.example.G_apprenant.controller.PaiementController#create(PaiementRequest)
2025-09-24 13:39:07 - Read "application/json;charset=UTF-8" to [PaiementRequest{inscriptionId=5, montant=10000, modePaiement='Mobile Money', module='Module 2'}]
2025-09-24 13:39:07 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0 
    where
        i1_0.id_inscription=?
2025-09-24 13:39:07 - 
    insert 
    into
        paiement
        (date_paiement, id_inscription, mode_paiement, module, montant) 
    values
        (?, ?, ?, ?, ?)
2025-09-24 13:39:07 - 
    select
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.id_inscription,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    left join
        inscription i1_0 
            on i1_0.id_inscription=p1_0.id_inscription 
    where
        i1_0.id_inscription=?
2025-09-24 13:39:07 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:39:07 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:39:07 - Writing [Paiement{idPaiement=13, datePaiement=2025-09-24, montant=10000, modePaiement='Mobile Money', module= (truncated)...]
2025-09-24 13:39:07 - Completed 200 OK
2025-09-24 13:39:07 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:39:07 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:39:07 - GET "/api/inscriptions", parameters={}
2025-09-24 13:39:07 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:39:07 - GET "/api/paiements", parameters={}
2025-09-24 13:39:07 - Mapped to com.example.G_apprenant.controller.PaiementController#getAll()
2025-09-24 13:39:07 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:39:07 - 
    select
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.id_inscription,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0
2025-09-24 13:39:07 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:39:07 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:39:07 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:39:07 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:39:07 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:39:07 - Writing [[Paiement{idPaiement=8, datePaiement=2024-02-03, montant=100000.00, modePaiement='Virement', module= (truncated)...]
2025-09-24 13:39:07 - Completed 200 OK
2025-09-24 13:39:07 - Completed 200 OK
2025-09-24 13:40:38 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:40:38 - 
    select
        u1_0.id_utilisateur,
        u1_0.compte_verrouille,
        u1_0.date_creation,
        u1_0.date_modification,
        u1_0.derniere_connexion,
        u1_0.email,
        u1_0.email_verifie,
        u1_0.mot_de_passe_hash,
        u1_0.nom,
        u1_0.preferences_langue,
        u1_0.prenom,
        u1_0.role,
        u1_0.statut,
        u1_0.telephone,
        u1_0.tentatives_connexion_echec,
        u1_0.theme_preference,
        u1_0.token_expiration,
        u1_0.token_reinitialisation 
    from
        utilisateurs u1_0 
    where
        u1_0.email=? 
        and u1_0.statut='ACTIF' 
        and u1_0.compte_verrouille=false
2025-09-24 13:40:38 - GET "/api/inscriptions", parameters={}
2025-09-24 13:40:38 - Mapped to com.example.G_apprenant.controller.InscriptionController#getAll()
2025-09-24 13:40:38 - GET "/api/paiements", parameters={}
2025-09-24 13:40:38 - Mapped to com.example.G_apprenant.controller.PaiementController#getAll()
2025-09-24 13:40:38 - 
    select
        i1_0.id_inscription,
        i1_0.id_apprenant,
        i1_0.date_inscription,
        i1_0.droit_inscription,
        i1_0.id_formation,
        i1_0.statut 
    from
        inscription i1_0
2025-09-24 13:40:38 - 
    select
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.id_inscription,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0
2025-09-24 13:40:38 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:40:38 - Writing [[Inscription{idInscription=5, dateInscription=2024-02-01, statut='Confirmé', droitInscription=20000. (truncated)...]
2025-09-24 13:40:38 - 
    select
        p1_0.id_inscription,
        p1_0.id_paiement,
        p1_0.date_paiement,
        p1_0.mode_paiement,
        p1_0.module,
        p1_0.montant 
    from
        paiement p1_0 
    where
        p1_0.id_inscription=?
2025-09-24 13:40:38 - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-09-24 13:40:38 - Writing [[Paiement{idPaiement=8, datePaiement=2024-02-03, montant=100000.00, modePaiement='Virement', module= (truncated)...]
2025-09-24 13:40:38 - Completed 200 OK
2025-09-24 13:40:38 - 
    select
        f1_0.id_formation,
        f1_0.description,
        f1_0.duree,
        f1_0.frais,
        f1_0.nom 
    from
        formation f1_0 
    where
        f1_0.id_formation=?
2025-09-24 13:40:38 - Completed 200 OK
2025-09-24 13:42:11 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-09-24 13:42:11 - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-24 13:42:11 - Graceful shutdown complete
2025-09-24 13:42:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-24 13:42:11 - HikariPool-1 - Shutdown initiated...
2025-09-24 13:42:11 - HikariPool-1 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.5)

2025-09-24 13:42:11 - Starting GApprenantApplication using Java 17.0.16 with PID 84519 (/media/fandresena/Data/projet/backent_gestion_formation/target/classes started by fandresena in /media/fandresena/Data/projet/backent_gestion_formation)
2025-09-24 13:42:11 - No active profile set, falling back to 1 default profile: "default"
2025-09-24 13:42:12 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-24 13:42:12 - Finished Spring Data repository scanning in 31 ms. Found 5 JPA repository interfaces.
2025-09-24 13:42:12 - Tomcat initialized with port 8080 (http)
2025-09-24 13:42:12 - Starting service [Tomcat]
2025-09-24 13:42:12 - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-24 13:42:12 - Initializing Spring embedded WebApplicationContext
2025-09-24 13:42:12 - Root WebApplicationContext: initialization completed in 766 ms
2025-09-24 13:42:12 - Filter 'webMvcObservationFilter' configured for use
2025-09-24 13:42:12 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-24 13:42:12 - HHH000026: Second-level cache disabled
2025-09-24 13:42:12 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-24 13:42:12 - HikariPool-2 - Starting...
2025-09-24 13:42:12 - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@7be396d0
2025-09-24 13:42:12 - HikariPool-2 - Start completed.
2025-09-24 13:42:12 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-24 13:42:12 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 16.10
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-24 13:42:12 - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@59cf8ad2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@8a2e01b)
2025-09-24 13:42:12 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64390e1f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b415e)
2025-09-24 13:42:12 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-24 13:42:13 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-24 13:42:13 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-24 13:42:13 - 57 mappings in 'requestMappingHandlerMapping'
2025-09-24 13:42:13 - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-09-24 13:42:13 - Exposing 3 endpoints beneath base path '/actuator'
2025-09-24 13:42:14 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-09-24 13:42:14 - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-09-24 13:42:14 - LiveReload server is running on port 35729
2025-09-24 13:42:14 - Tomcat started on port 8080 (http) with context path '/api'
2025-09-24 13:42:14 - Started GApprenantApplication in 2.68 seconds (process running for 1184.386)
2025-09-24 13:42:14 - Condition evaluation unchanged
